%%
% Clear all variables from the workspace
clear all
% Create a VideoReader object for the file RoadTraffic.mp4
v = VideoReader("RoadTraffic.mp4");

% Read the first frame and enhance it using a custom function
frameSum = enhanceImage(im2double(read(v,1)));
% Loop through the remaining frames and enhance and sum them
for idx = 2:v.NumFrames
    frameSum = frameSum + enhanceImage(im2double(read(v,idx)));
end
% Compute the average frame by dividing the sum by the number of frames
background = frameSum/v.NumFrames;
% Create a VideoWriter object for the output file MathWorksTraffic2.mp4
v1 = VideoWriter("RoadTraffic1.mp4", "MPEG-4");
%%
% Open a video file using a VideoReader object named v1
open(v1);
% Get the total number of frames in the video
nFrames = v.NumFrames;
% Initialize empty arrays to store region properties
numRegions = zeros(nFrames, 1);
meanRegionSize = zeros(nFrames, 1);
totalRegionSize = zeros(nFrames, 1);

% Loop through each frame
for idx = 1:v.NumFrames
    % Read the current frame and convert it to double precision
    frame = im2double(read(v, idx));
    % Apply Gaussian filtering to the frame
    frame = imgaussfilt(frame, 2);
    % Enhance the image using the functions
    BWImg = enhanceImage(frame);
    % Compute the absolute difference between the enhanced image and the background
    frameDiff = abs(BWImg - background);
    % Segment the image (not specified in the code snippet)
    [BW, masked] = segmentImage(frameDiff);
    % Compute region properties (bounding boxes and area) for the segmented regions
    props = regionprops("table", BW, "BoundingBox", 'Area');
    % Update the arrays with the number, mean, and total of region areas
    numRegions(idx) = height(props);
    meanRegionSize(idx) = mean([props.Area]);
    totalRegionSize(idx) = sum([props.Area]);
    % Draw rectangles around detected regions
    vehicleBox = insertShape(frame, "Rectangle", props.BoundingBox, "LineWidth", 2, "Color", "red");
    % Create a table with the region properties
    regionPropsTable = table(numRegions, meanRegionSize, totalRegionSize);
    % Write the frame with bounding boxes to the output video
    writeVideo(v1, vehicleBox);
end
% Close the video file
close(v1)
%%
function enhancedImg = enhanceImage(colorFrame)
    % Convert the image to grayscale
    img = rgb2gray(colorFrame);

    % Remove noise using a Gaussian filter
    imgF = imgaussfilt(img, 4);

    % Output the final result
    enhancedImg = imgF;
end

function [BW,maskedImage] = segmentImage(X)
%segmentImage Segment image using auto-generated code from imageSegmenter app
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the imageSegmenter app. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 21-Nov-2023
%----------------------------------------------------


% Threshold image - manual threshold
BW = X > 1.372500e-01;

% Open mask with disk
radius = 1;
decomposition = 0;
se = strel('disk', radius, decomposition);
BW = imopen(BW, se);

% Close mask with disk
radius = 25;
decomposition = 0;
se = strel('disk', radius, decomposition);
BW = imclose(BW, se);

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;
end


